{"ast":null,"code":"var _jsxFileName = \"/Users/macosm1/Desktop/projects/netflix-clone/src/components/MainContent.js\",\n  _s = $RefreshSig$();\n// MainContent.js\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport MovieSlider from \"./MovieSlider\"; // Import the MovieSlider component\nimport Loading from \"./Loading\"; // Import the Loading component\n\n// Mock data for the slider\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockSlides = [{\n  id: 1,\n  imageUrl: \"slide1.jpg\"\n}, {\n  id: 2,\n  imageUrl: \"slide2.jpg\"\n}, {\n  id: 3,\n  imageUrl: \"slide3.jpg\"\n}\n// Add more slides as needed\n];\nconst MainContentContainer = styled.div`\n  position: relative;\n  height: 100vh;\n`;\n_c = MainContentContainer;\nconst MainContent = ({\n  isLoading\n}) => {\n  _s();\n  const [loading, setLoading] = useState(isLoading);\n  useEffect(() => {\n    setLoading(isLoading);\n  }, [isLoading]);\n  return /*#__PURE__*/_jsxDEV(MainContentContainer, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(MovieSlider, {\n      slides: mockSlides\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 32\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(MainContent, \"JSsTnytt7P0H7GzR1keGUnkxuNA=\");\n_c2 = MainContent;\nexport default MainContent;\nvar _c, _c2;\n$RefreshReg$(_c, \"MainContentContainer\");\n$RefreshReg$(_c2, \"MainContent\");","map":{"version":3,"names":["React","useState","useEffect","styled","MovieSlider","Loading","jsxDEV","_jsxDEV","mockSlides","id","imageUrl","MainContentContainer","div","_c","MainContent","isLoading","_s","loading","setLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","slides","_c2","$RefreshReg$"],"sources":["/Users/macosm1/Desktop/projects/netflix-clone/src/components/MainContent.js"],"sourcesContent":["// MainContent.js\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport MovieSlider from \"./MovieSlider\"; // Import the MovieSlider component\nimport Loading from \"./Loading\"; // Import the Loading component\n\n// Mock data for the slider\nconst mockSlides = [\n  { id: 1, imageUrl: \"slide1.jpg\" },\n  { id: 2, imageUrl: \"slide2.jpg\" },\n  { id: 3, imageUrl: \"slide3.jpg\" },\n  // Add more slides as needed\n];\n\nconst MainContentContainer = styled.div`\n  position: relative;\n  height: 100vh;\n`;\n\nconst MainContent = ({ isLoading }) => {\n  const [loading, setLoading] = useState(isLoading);\n\n  useEffect(() => {\n    setLoading(isLoading);\n  }, [isLoading]);\n\n  return (\n    <MainContentContainer>\n      {loading ? <Loading /> : <MovieSlider slides={mockSlides} />}\n    </MainContentContainer>\n  );\n};\n\nexport default MainContent;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,WAAW,MAAM,eAAe,CAAC,CAAC;AACzC,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAC;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAG,CACjB;EAAEC,EAAE,EAAE,CAAC;EAAEC,QAAQ,EAAE;AAAa,CAAC,EACjC;EAAED,EAAE,EAAE,CAAC;EAAEC,QAAQ,EAAE;AAAa,CAAC,EACjC;EAAED,EAAE,EAAE,CAAC;EAAEC,QAAQ,EAAE;AAAa;AAChC;AAAA,CACD;AAED,MAAMC,oBAAoB,GAAGR,MAAM,CAACS,GAAI;AACxC;AACA;AACA,CAAC;AAACC,EAAA,GAHIF,oBAAoB;AAK1B,MAAMG,WAAW,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAACc,SAAS,CAAC;EAEjDb,SAAS,CAAC,MAAM;IACdgB,UAAU,CAACH,SAAS,CAAC;EACvB,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,oBACER,OAAA,CAACI,oBAAoB;IAAAQ,QAAA,EAClBF,OAAO,gBAAGV,OAAA,CAACF,OAAO;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGhB,OAAA,CAACH,WAAW;MAACoB,MAAM,EAAEhB;IAAW;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAE3B,CAAC;AAACP,EAAA,CAZIF,WAAW;AAAAW,GAAA,GAAXX,WAAW;AAcjB,eAAeA,WAAW;AAAC,IAAAD,EAAA,EAAAY,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}